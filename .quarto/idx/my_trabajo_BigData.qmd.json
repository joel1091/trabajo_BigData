{"title":"Análisis de la plataforma de streaming NETFLIX","markdown":{"yaml":{"title":"Análisis de la plataforma de streaming NETFLIX","description":"Comparativa y análisis de películas, series, géneros, autores...\n","author":[{"name":"Joel Seguí Far","affiliation":"Universitat de València","affiliation-url":"https://www.uv.es"}],"date":"2024-01-24","categories":["Trabajo BigData","Netflix"],"image":"./imagenes/imagen_01.png","title-block-banner":true,"title-block-banner-color":"white","toc-depth":3,"smooth-scroll":true,"format":{"html":{"link-external-newwindow":true}},"code-tools":true,"code-link":true},"headingText":"Introducción","containsRefs":false,"markdown":"\n\n\n\nEl objetivo de este trabajo es analizar las diferencias que existen en la creación de contenido en netflix. Compararemos Las películas con las series, observaremos las diferencias entre países, y los autores más relevantes, entre otras cosas.\n\n*Pd: Hay un botón arriba a la derecha para cambiar a modo oscuro*\n\n## Datos del trabajo\n\n:::{.panel-tabset}\n\n## Datos\n\nVamos a utilizar unos database previamente descargados provenientes de `kaggle`, una web muy conocida entre la comunidad de Data Science que tiene la finalidad de conectar, compartir y realizar análisis de todo tipo de casos, haciendo pública la obtención de los datos.\n\n## Código\n\n```{r}\n#Librerias Preliminares\nlibrary(wordcloud2)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggtext)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(gt)\nlibrary(DT)\n\n#LIMPIEZA DATOS NETFLIX----\n\n#Empezaos llamando/creando a los dataframes\n\nurl_netflix <- \"./datos/netflix/titles.csv\"\nurl_autor_net <- \"./datos/netflix/credits.csv\"\n\ndf_cred_net <- read.csv(url_autor_net)\ndf_net <- read.csv(url_netflix)\n\n#Limpieza del dataframe de directores\n\ndf_cred_net_01 <- df_cred_net |> \n  filter(role == \"DIRECTOR\")\n\ndf_cred_net_02 <- na.omit(df_cred_net_01) |> \n  select(!c(character,role, person_id))\n\n#Limpieza dataframe películas\n\n#¿Cuantos NA hay en cada variable del dataframe?\ncantidad_na_por_columna <- colSums(is.na(df_net))\nprint(cantidad_na_por_columna)\n\n#¿Sigo? Cont.\n\ndf_net_01 <- df_net |>\n  select(!c(seasons, description, age_certification, imdb_id, tmdb_score))\n\ndf_net_01 <- df_net_01 |> \n  na.omit(df_net_01)\n\ndf_netflix <- df_net_01 |> \n  dplyr::rename(\n    year = release_year,\n    score = imdb_score,\n    votes = imdb_votes,\n    popularity = tmdb_popularity\n  )\n\ncantidad_na_por_columna <- colSums(is.na(df_netflix))\nprint(cantidad_na_por_columna)\n#de locos\n\ndf_netflix_director <- df_netflix |> \n  left_join(df_cred_net_02, by= \"id\")\n\n#En los actores que no se sabe el nombre ponemos unknown para que, al eliminar los NA de los otros sitios no elimine también estos datos (que son menos útiles)\ndf_netflix_director$name <- ifelse(is.na(df_netflix_director$name), \"UNKNOWN\", df_netflix_director$name)\n\ndf_netflix_director <- df_netflix_director |> \n  na.omit() |> \n  dplyr::rename(Director = name)\n\n#Finalizado y nos quedamos con el final\nrm(list = ls()[!ls() %in% c(\"df_netflix\", \"df_netflix_director\")])\n\n#He creado 2 dataframes porqué en el de los autores, como hay películas/series que son producidas por varias personas se repiten, y para no alterar los analisis duplicando películas lo he hecho en 2.\n# Lo mismo haré con las siguientes plataformas\n\n```\n\n:::\n\n---\n\n# Evolución del contenido\n\n```{r}\nevolution_netflix <- df_netflix |> \n  select(title, type, year)\n\nevo_net_show <- evolution_netflix |> \n  filter(type == \"SHOW\") |> \n  group_by(year) |> \n  summarise(num_shows = n())\n\nevo_net_movie <- evolution_netflix |> \n  filter(type == \"MOVIE\") |> \n  group_by(year) |> \n  summarise(num_movies = n())\n \ncomb_evo_type_net <- inner_join(evo_net_show,evo_net_movie, by = (\"year\"), suffix = c(\"_Movie\", \"_Show\")) |> \n  filter(year >= 2000 & year != 2023)\n\ncomb_evo_long_net <- comb_evo_type_net |> \n  tidyr::pivot_longer(cols = c(num_shows, num_movies), names_to = \"type\", values_to = \"total\")\n\nggplot(comb_evo_long_net, aes(x = as.factor(year), y = total, fill = type)) +\n  labs(title = \"Creación de contenido a lo largo de los años por <span style='color:#E50914'><b>Movie</b></span> &<span style='color:#564d4d'><b>TV Show </b></span>\")+\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.9)+\n  scale_fill_manual(values = c(\"#E50914\",\"#564d4d\"))+\n  scale_y_continuous(sec.axis = sec_axis(~.,name= \"total\"))+ #Encontrar esto = 1h+\n  theme_void()+\n  theme(\n    axis.text.x = element_text(angle = 90, vjust = 1, hjust=0.5), #años vertical\n    plot.title = element_markdown(margin = margin(b = 10),face = \"bold\", hjust = 0.5), #usar html en el título\n    axis.text.y = element_text(hjust = 0),\n    legend.position = \"none\",\n    plot.margin = margin(0, 0.3, 0.2, -0.63, unit = \"cm\"),\n    )\n\n```\n\nEl gráfico muestra la evolución de la creación de contenido en los últimos 22 años, desde 2000 hasta 2022. Se divide en dos categorías: **Películas** *(rojo)* y **series de televisión** *(marrón)*.\n\n**Películas**\n\nEn el caso de las películas, se observa una **tendencia creciente** a lo largo de los años, con un aumento de más del 200% desde 2000. El crecimiento es más pronunciado en los últimos años, con un aumento de más de 50% en la última década.\n\nEste crecimiento se puede atribuir a varios factores, entre los que destacan:\n\n  -El **aumento de la popularidad de las plataformas de streaming**, como Netflix, HBO Max y Disney+, que han creado una mayor demanda de contenido original.<br>\n  -El desarrollo de nuevas tecnologías de producción, como la animación por ordenador, que han **reducido los costes** y han facilitado la creación de contenido de mayor calidad.<br>\n  -La **globalización de la industria cinematográfica**, que ha permitido a los creadores de contenido llegar a una audiencia más amplia.<br>\n  \n**Series de televisión**\n\nEn el caso de las series de televisión, también se observa una **tendencia creciente** a lo largo de los años, con un aumento de más del 300% desde 2000. El crecimiento es más pronunciado en la última década, con un aumento de más del 150%.\n\nEste crecimiento se debe a factores similares a los que han impulsado el crecimiento de las películas, como el aumento de la popularidad de las plataformas de streaming y el desarrollo de nuevas tecnologías de producción. Además, las series de televisión han experimentado una serie de cambios en los últimos años que las han hecho más atractivas para los espectadores, como:\n\n  -La **diversificación de los géneros y formatos**, con el auge de las series de comedia, drama, terror, fantasía, ciencia ficción, etc.<br>\n  -La **mayor duración de las temporadas**, que ha permitido a los creadores de contenido desarrollar historias más complejas.<br>\n  -La incorporación de nuevos actores y actrices, que han atraído a nuevos espectadores.<br>\n  \n**Conclusiones**\n\nEn general, el gráfico muestra que la creación de contenido, tanto de películas como de series de televisión, ha experimentado un crecimiento significativo en los últimos años. Este crecimiento se debe a una serie de factores, entre los que destacan el aumento de la popularidad de las plataformas de streaming, el desarrollo de nuevas tecnologías de producción y la globalización de la industria.\n\nSe espera que esta tendencia continúe en los próximos años, ya que las plataformas de streaming siguen creciendo y las nuevas tecnologías de producción siguen desarrollándose.\n\n---\n\n# Comparación Series Vs Películas\n\n## Oferta de streaming Netflix\n\n```{r}\n#Gráfico Porcentaje Películas Vs Series----\n\ntipos_netflix <- df_netflix |> \n  count(type) |> \n  mutate(porcentaje = n / sum(n) *100) \n\n#Voy a cambiar el nombre de dentro de las variable type\n\ntipos_netflix$type <- gsub(\"MOVIE\", \"Movie\", tipos_netflix$type, ignore.case = TRUE)\ntipos_netflix$type <- gsub(\"SHOW\", \"TV Show\", tipos_netflix$type, ignore.case = TRUE)\n\n#printf(\"%.1f%%\", ...) Para coger solo 1 decimal\ntipos_netflix$porcentaje <-sprintf(\"%.f%%\", tipos_netflix$porcentaje)\n\n#Creamos una variable que contenga tanto el tipo como el porcentaje para hacerlo luego bonito\ntipos_netflix$etiqueta <- paste(tipos_netflix$porcentaje, tipos_netflix$type, sep = \"\\n\")\n\n# Suponiendo que conteo_tipos es tu dataframe con el conteo y porcentaje\nggplot(tipos_netflix, aes(x = \"\", y = porcentaje, fill = type)) +\n  geom_bar(stat = \"identity\", width = 0.4) +\n  geom_text(aes(label = etiqueta), position = position_stack(0.5), size = 10, color = \"white\", fontface = \"bold\") +\n  scale_fill_manual(values = c(\"#B81D24\", \"#564d4d\")) +  # Colores personalizados\n  coord_flip()+\n  theme_void()+\n  theme(legend.position = \"none\")\n  \n#He estado 3h mínimo para hacer esta gráfica (para poner el texto + % dentro... locura)\n\n\n```\n\nEl gráfico muestra la composición del contenido de Netflix en términos de películas y series de televisión. La barra roja representa el porcentaje de películas, mientras que la barra marrón representa el porcentaje de series de televisión.<br>\nComo podemos observar, Netflix ofrece una amplia variedad de contenido, con un **enfoque especial en las películas**, donde estas representan el **62%** del contenido de Netflix, mientras que las **series de televisión** representan el **38%**.\n\nEste resultado se debe a varios factores. En primer lugar, las películas son un tipo de contenido popular que atrae a una amplia audiencia, además de que Netflix ha invertido mucho en la producción de películas originales, que han tenido un gran éxito en la actualidad. \n\n---\n\n## Oferta Streaming por paises\n\n```{r}\n#GRAFICOS DE BARRAS SERIES VS PELIS RESPECTO AL PAIS----\n\n#En primer lugar vamos a desglosarlo por paises, ya que hay pelis que estan producidas en varios países\n\n#Para descubrir como se hacía esto he tenido que venderle mi alma al diablo\n\ndf_netflix_long <- df_netflix |> \n  select(c(title, type, production_countries)) |> \n  separate_rows(production_countries, sep = \", \") |> \n  filter(!is.na(production_countries))\n\ndf_netflix_long$production_countries <- str_replace_all(df_netflix_long$production_countries,\"[\\\\[\\\\]']\", \"\")\n\n#Vamos a contar MOVIE Y SHOW producido en cada país\n\ndf_netflix_long <- df_netflix_long |> \n  group_by(production_countries, type) |> \n  summarise(count = n())\n\ndf_netflix_long <- df_netflix_long |> \n  group_by(production_countries) |> \n  mutate(total = sum(count)) |> \n  ungroup()\n\n#Eliminamos las filas que no contengan nada (NA)\ndf_netflix_long <- df_netflix_long |> \n  filter(!is.na(production_countries) & production_countries != \"\")\n\n#Ordenamos dataframe y seleccionamos los 10 primeros (20 porque son 2 por país)\ndf_netflix_long <- df_netflix_long |> \n  arrange(desc(total))\n\ntop_country_netflix <- head(df_netflix_long, 20)\n\n#Creamos 2 nuevas variables con el % respecto al total  (MOVIE y SHOW)\ntop_country_netflix <- top_country_netflix |> \n  group_by(production_countries) |> \n  summarise(percentage_movie = (count[type == \"MOVIE\"] / total) * 100,\n         percentage_show = (count[type == \"SHOW\"] / total) * 100) |> \n  ungroup()\n\n#Tenemos los datos duplicados, hay que coger solo 1 de cada país\ntop_country_netflix <- top_country_netflix |> \n  distinct(production_countries, .keep_all = TRUE)\n\n#Vamos a cambiar los nombres de los países para que se vea mejor luego al graficarlo\ntop_country_netflix <- top_country_netflix |> \n  mutate(production_countries = case_when(\n    production_countries == \"KR\" ~ \"Korea\",\n    production_countries == \"JP\" ~ \"Japón\",\n    production_countries == \"GB\" ~ \"UK\",\n    production_countries == \"US\" ~ \"USA\",\n    production_countries == \"MX\" ~ \"México\",\n    production_countries == \"ES\" ~ \"España\",\n    production_countries == \"FR\" ~ \"Francia\",\n    production_countries == \"CA\" ~ \"Canada\",\n    production_countries == \"DE\" ~ \"Turquía\",\n    production_countries == \"IN\" ~ \"Índia\",\n  ))\n\n#Y ordenamos de más a menos respecto SHOW\ntop_country_netflix <- top_country_netflix |> \n  arrange(desc(percentage_show))\n\n#Pasamos a long para que lo pueda interpretar mejor\ntop_country_netflix_long <- top_country_netflix |> \n  pivot_longer(cols = c(percentage_movie, percentage_show),\n               names_to = \"type\",\n               values_to = \"percentage\")\n\n#Tenemos que pasar a factor la variable production_countries para que no se buguee\ntop_country_netflix_long$production_countries <- factor(top_country_netflix_long$production_countries, levels = unique(top_country_netflix_long$production_countries))\n#Grafíco\n\n#Redondeamos a 1 decimal y ponemos el símbolo %\ntop_country_netflix_long$percentage <- round(top_country_netflix_long$percentage, 1)\n\n#si hago esto se rompe, no se porque\n#top_country_netflix_long$percentage <- paste0(top_country_netflix_long$percentage, \"%\")\n\nggplot(top_country_netflix_long, aes(x = production_countries, y = percentage, fill = type)) +\n  geom_bar(stat = \"identity\",position = \"stack\", width = 0.5)+\n  coord_flip()+\n  scale_fill_manual(values = c(\"percentage_movie\" = \"#E50914\", \"percentage_show\" = \"#564d4d\"))+\n  geom_text(aes(label = percentage), position = position_stack(0.5), size = 3, color = \"white\")+\n  labs(title = \"Top paises creadores de cine por <span style='color:#E50914'><b>Movie</b></span> &<span style='color:#564d4d'><b>TV Show </b></span> <br><span style='font-size:10pt;'><i>(Representado en %)</i></span>\")+\n  theme_minimal()+\n  theme(\n    legend.position = \"none\",\n    plot.title = element_markdown(margin = margin(b = 10),face = \"bold\", hjust = 0.5),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(), \n    panel.grid.major.y = element_blank(),\n  )+\n  scale_y_reverse()\n# DIOS ESTE GRÁFICO, PA VOLVERSE LOCO, creo que a medida que hago más gráficos son más costosos\n#Fino señores\n\n```\n\nLa gráfica muestra los **diez países que producen más películas y series de televisión en el mundo**, segmentado por categoría. Los países se ordenan de mayor a menor producción, según el porcentaje de películas.\n\nComo se puede ver, **India** es el país que tiene una **mayor proporción** de creación de **películas** del ranking con un 91.5%. A continuación tenemos a Turquía, con un 74.3% (con sus importantes películas turcas que todos conocemos), y Canada y Francia que producen aproximádamente un 70% películas.<br>\nEn el otro extremo, podemos encontrar a los **países asiáticos**, Korea y Japón, caracterizados por hacer **series de animación** o acción y aventura, como \"El juego del calamar\". Estas se han especializado en la creación de series de televisión/anime, siendo su producción un 78.4% y 62.7% sobre el total de su producción.\nPor otro lado, podemos observar ciertos países que se decantan más por la creación de películas pero que, aún así, está muy parejo, rondando todos el 60% en películas y el restante 40% en series. Estos son, España, México, Estados Unidos y Reino Unido.\n\nEl gráfico muestra una tendencia general a la creciente importancia de los países emergentes en la producción de cine y televisión. India, Turquía y Canadá son ejemplos de países que han experimentado un crecimiento significativo en la producción de cine y televisión en los últimos años. En contraposición, también muestra la importancia de los mercados internacionales para la industria cinematográfica y televisiva. Los países que aparecen en este ranking son aquellos que producen películas y programas de televisión que tienen éxito en todo el mundo.\n\n---\n\n# Ranking de géneros por nota\n\n```{r}\n#Ranking/Valoración de los géneros en netflix-----\n\n#Seleccionamos los datos que vamos a utilizar y filtrarlos para quitarnos las notas sesgadas (pocos votos)\n\ndf_generos_net <- df_netflix |> \n  select(title, type, genres, score, votes) |> \n  filter(votes> 4000) |> \n  select(-votes)\n\n#Vamos a desglosarlo, ya que una película puede tener varios géneros\n\ngeneros_net <- df_generos_net |> \n  separate_rows(genres, sep = \", \") |> \n  filter(!is.na(genres)) \n\ngeneros_net$genres <- str_replace_all(generos_net$genres,\"[\\\\[\\\\]']\", \"\")\n\n#En un principio vamos a hacer el analisis sobre Movies\ngeneros_net <- generos_net |> \n  filter(type == \"MOVIE\") |> \n  select(-type)\n\n#Eliminamos las categorías menos conocidas\ngeneros_net <- generos_net |> \n  filter(!(genres %in% c(\"war\", \"sport\", \"european\",\"family\", \"fantasy\")))\n\n#Vamos a hacer un filtro seleccionando las 80 mejores peliculas de cada categoría y hacer la media\n#(Se va a crear un poco de sesgo pero al fin y al cabo es para que se vea mejor)\ngeneros_net_ordenado <- generos_net |> \n  arrange(genres, desc(score))\n\ntop_100_por_genero <- generos_net_ordenado |> \n  group_by(genres) |> \n  slice_head(n = 80)\n\nnota_generos_net <- top_100_por_genero |> \n  group_by(genres) |> \n  summarise(nota_media = mean(score, na.rm = TRUE))\n\nnota_generos_net$nota_media <- round(nota_generos_net$nota_media, 2)\n\nnota_generos_net <- nota_generos_net |> \n  mutate(genres = case_when(\n    genres == \"documentation\" ~ \"documental\",\n    TRUE ~ genres\n  ))\n\nnota_generos_net$genres <- tools::toTitleCase(nota_generos_net$genres)\n\n\n\n\n#GRAFICA \nggplot(nota_generos_net) +\n  geom_col(\n    aes(\n      x = reorder(str_wrap(genres, 5), nota_media),\n      y = (nota_media - 5) / 5,  # Escalar la altura de las barras al rango [0, 1]\n      fill = nota_media\n    ),\n    position = \"dodge2\",\n    show.legend = TRUE,\n    alpha = .9\n  ) +\n  coord_polar() +\n  scale_y_continuous(\n    limits = c(-0.7, 1),  # Ajustar los límites a [0, 1]\n    expand = c(0, -0.4)  \n  ) +\n  scale_fill_gradientn(\n    \"Nota media del género\",\n    colours = c(\"#252527\",\"#6d625c\",\"#410a14\" ,\"#ed0b0e\")\n  ) +\n  guides(fill = guide_colorsteps(\n    barwidth = 15, barheight = .5, title.position = \"top\", title.hjust = 0.5\n  )) +\n  labs(\n    title = \"Valoración de las categorías en Netflix\"\n  )+\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid = element_blank(),\n    plot.title = element_text(face = \"bold\", size = 15, hjust = 0.5),\n    panel.background = element_rect(fill = \"white\", color = \"white\"),\n    panel.grid.major.x = element_blank(),\n    axis.text.x = element_text(color = \"#252527\", size = 11, hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_text(color = \"#252527\")\n  )\n\n```\n\nEsta gráfica muestra la valoración media de las categorías de contenido en Netflix, según las puntuaciones de los usuarios. Las categorías se ordenan de menor a mayor según el sentido de las agujas del reloj, yendo con un color más oscuro y negro, lás menos valoradas, a un rojo más vivo, siendo estas las mejor valoradas por la audiencia.\nEn primer lugar, podemos observar como las categorías más mainstream son **más valoradas**, siendo estas **Drama** y **Comedia**, con una nota de *8.2* y *8* respectivamente. <br>\nA continuación tenemos un grupo de categorías, también muy bien valoradas con una nota muy similar, que oscilan entre *7.25* hasta *7.75*. Estas son Documental, Action, Thriller, Romance y Crime, de más valorado a menos.<br>\nPor último, se hallan las categorías **peor valoradas** de netflix, con una nota que va desde *6.4*, la menos valorada, hasta *6.8*. Entre estas podemos destacar a **Wester** y **Horrror** que son las peores.<br>\n\nEn general, las categorías de contenido más valoradas en Netflix son aquellas que ofrecen historias complejas e interesantes, que pueden generar una mayor conexión con los espectadores y aceptadas por un público más amplio (son más para todos los públicos).En cambio, las categorías peor valoradas son aquellas que pueden ser polarizadoras o que pueden no ofrecer una experiencia tan gratificante para los espectadores.\n\n---\n\n# Series i películas más valoradas\n\n:::{.panel-tabset}\n\n## Top Series\n\n```{r}\ntable_show_net <- df_netflix |> \n  filter(type == \"SHOW\") |> \n  filter(votes > 70000) |> \n  select(c(year, title, genres, production_countries, score)) |> \n  arrange(desc(score)) |> \n  slice_head(n=10)\n\ntable_show_net <- table_show_net |> \n  dplyr::rename(\n    Año = year,\n    Título = title,\n    Géneros = genres,\n    Producción = production_countries,\n    Nota = score\n  )\n\ntable_show_net |> \n  gt() |> \n  tab_header(title = md(\"**Top 10** mejores **series** de Netflix\"),\n             subtitle = md(\"*Dentro de las más valoradas*\")) |> \n  tab_footnote(footnote = md(\"*Producción propia a partir de datos de `kaggle`*\"))\n\n```\n\nAquí podemos observar el top 10 de las mejores series de Netflix valoradas por el público, de forma descendiente.\nPráctiamente todas tienen una nota de excelente, pero hay varias cosas que se pueden observar. <br>\nEn primer lugar, dentro del top, podemos ver como hay una clara predominación de series producidas en **Estados Undidos**, que puede deberse, o porque producen una mayor cantidad de series o que gracias a esto han aprendido y se han hecho **mejores cinematográficamente**. La más destacada \"Breaking Bad\"<br>\nEn segundo lugar, podemos observar como **Japón**, con sus **animes** se apodera de prácticamente la otra mitad del podio, entre ellos \"Death Note\", \"Attack on Titan\" o \"One Piece\".\n\n## Top Películas\n\n```{r}\ntable_movie_net <- df_netflix |> \n  filter(type == \"MOVIE\") |> \n  filter(votes > 42000) |> \n  select(c(year, title, genres, production_countries, score)) |> \n  arrange(desc(score)) |> \n  slice_head(n=10)\n\ntable_movie_net <- table_movie_net |> \n  dplyr::rename(\n    Año = year,\n    Título = title,\n    Géneros = genres,\n    Producción = production_countries,\n    Nota = score)\n\ntable_movie_net |> \n  gt() |> \n  tab_header(title = md(\"**Top 10** mejores **películas** de Netflix\"),\n             subtitle = md(\"*Dentro de las más valoradas*\")) |> \n  tab_footnote(footnote = md(\"*Producción propia a partir de datos de `kaggle`*\"))\n\n```\n\nAquí, podemos observar la misma tendencia, como Estados Unidos es la mayor productora de las mejores películas. <br>\nEn cambio, podemos ver una curiosa casualidad y es que las 3 películas de El señor de los anillos estan dentro del podio, con notas que van del 9 al 8.8.\n\n## Buscador de contenido\n\n```{r}\n#Tabla para buscar información\n\ndf_buscar_net <- df_netflix_director |> \n  select(-c(id, votes, popularity))\n  \ndatatable(df_buscar_net)\n\n```\n\n:::\n\n---\n\n# Directores con más películas\n\n```{r}\n#Gráfico de Nombres de TOP DIRECTORES en NETFLIX----\ndf_netflix_dir <- df_netflix_director |> \n  count(Director, name = \"cantidad\", sort = TRUE)\n\ndf_netflix_dir <- df_netflix_dir |> \n  filter(Director != \"UNKNOWN\") |> \n  mutate(Director = as.factor(Director))\n\nwordcloud2(df_netflix_dir, size=0.6, \n           color=rep_len( c(\"#B81D24\",\"#564d4d\"), nrow(df_netflix_dir)),backgroundColor =\"#000000\")\n\n```\n\n<br>\n\nEste gráfico representa a los directores con mas predominancia en los cines de Netflix de una forma más creativa, visual y bonita. Siempre respetando la paleta de colores de netflix. <br>\nBrevemente, se puede observar como el mayor tamaño de los nombres indica un mayor número de obras realizadas. En este caso, el mayor productor es Raúl Campos, seguido de Jan Suter y Ryan Polito.\n\n---\n\n# Información extra\n\nEn este trabajo me he inspirado en una web donde hay una galería de todos los posibles gráficos que pueden crearse con `ggplot2`, llamado `R-graph-gallery`, podéis acceder [aquí](https://r-graph-gallery.com/){target=\"_blank\"}.<br>\nPor otro lado, este trabajo no hubiera podido ser posible si no fuese por `kaggle`, de donde he adquirido los dataframes y, además, me he inspirado de otros trabajos / gráficos. Podéis acceder [aquí](https://www.kaggle.com/){target=\"_blank\"}.<br>\nSe ha intentado seguir una mejor coherencia durante todo el trabajo y se ha respetado a la perfección la paleta de colores que representa netflix.<br>\nPara finalizar, he de explicar que he modificado / alterado los dataframes a la hora de filtrarlos etc. Es decir, estan sesgados para que la representación sea más notoria y bonita. Por tanto, puede que en algún caso no coincida algún dato con análisis externos a este trabajo. <br> *Por ejemplo, el ranking de géneros por nota, si selecciono todas las categorías sin a penas filtración todos tienen la misma nota.*\n","srcMarkdownNoYaml":"\n\n\n## Introducción\n\nEl objetivo de este trabajo es analizar las diferencias que existen en la creación de contenido en netflix. Compararemos Las películas con las series, observaremos las diferencias entre países, y los autores más relevantes, entre otras cosas.\n\n*Pd: Hay un botón arriba a la derecha para cambiar a modo oscuro*\n\n## Datos del trabajo\n\n:::{.panel-tabset}\n\n## Datos\n\nVamos a utilizar unos database previamente descargados provenientes de `kaggle`, una web muy conocida entre la comunidad de Data Science que tiene la finalidad de conectar, compartir y realizar análisis de todo tipo de casos, haciendo pública la obtención de los datos.\n\n## Código\n\n```{r}\n#Librerias Preliminares\nlibrary(wordcloud2)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggtext)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(gt)\nlibrary(DT)\n\n#LIMPIEZA DATOS NETFLIX----\n\n#Empezaos llamando/creando a los dataframes\n\nurl_netflix <- \"./datos/netflix/titles.csv\"\nurl_autor_net <- \"./datos/netflix/credits.csv\"\n\ndf_cred_net <- read.csv(url_autor_net)\ndf_net <- read.csv(url_netflix)\n\n#Limpieza del dataframe de directores\n\ndf_cred_net_01 <- df_cred_net |> \n  filter(role == \"DIRECTOR\")\n\ndf_cred_net_02 <- na.omit(df_cred_net_01) |> \n  select(!c(character,role, person_id))\n\n#Limpieza dataframe películas\n\n#¿Cuantos NA hay en cada variable del dataframe?\ncantidad_na_por_columna <- colSums(is.na(df_net))\nprint(cantidad_na_por_columna)\n\n#¿Sigo? Cont.\n\ndf_net_01 <- df_net |>\n  select(!c(seasons, description, age_certification, imdb_id, tmdb_score))\n\ndf_net_01 <- df_net_01 |> \n  na.omit(df_net_01)\n\ndf_netflix <- df_net_01 |> \n  dplyr::rename(\n    year = release_year,\n    score = imdb_score,\n    votes = imdb_votes,\n    popularity = tmdb_popularity\n  )\n\ncantidad_na_por_columna <- colSums(is.na(df_netflix))\nprint(cantidad_na_por_columna)\n#de locos\n\ndf_netflix_director <- df_netflix |> \n  left_join(df_cred_net_02, by= \"id\")\n\n#En los actores que no se sabe el nombre ponemos unknown para que, al eliminar los NA de los otros sitios no elimine también estos datos (que son menos útiles)\ndf_netflix_director$name <- ifelse(is.na(df_netflix_director$name), \"UNKNOWN\", df_netflix_director$name)\n\ndf_netflix_director <- df_netflix_director |> \n  na.omit() |> \n  dplyr::rename(Director = name)\n\n#Finalizado y nos quedamos con el final\nrm(list = ls()[!ls() %in% c(\"df_netflix\", \"df_netflix_director\")])\n\n#He creado 2 dataframes porqué en el de los autores, como hay películas/series que son producidas por varias personas se repiten, y para no alterar los analisis duplicando películas lo he hecho en 2.\n# Lo mismo haré con las siguientes plataformas\n\n```\n\n:::\n\n---\n\n# Evolución del contenido\n\n```{r}\nevolution_netflix <- df_netflix |> \n  select(title, type, year)\n\nevo_net_show <- evolution_netflix |> \n  filter(type == \"SHOW\") |> \n  group_by(year) |> \n  summarise(num_shows = n())\n\nevo_net_movie <- evolution_netflix |> \n  filter(type == \"MOVIE\") |> \n  group_by(year) |> \n  summarise(num_movies = n())\n \ncomb_evo_type_net <- inner_join(evo_net_show,evo_net_movie, by = (\"year\"), suffix = c(\"_Movie\", \"_Show\")) |> \n  filter(year >= 2000 & year != 2023)\n\ncomb_evo_long_net <- comb_evo_type_net |> \n  tidyr::pivot_longer(cols = c(num_shows, num_movies), names_to = \"type\", values_to = \"total\")\n\nggplot(comb_evo_long_net, aes(x = as.factor(year), y = total, fill = type)) +\n  labs(title = \"Creación de contenido a lo largo de los años por <span style='color:#E50914'><b>Movie</b></span> &<span style='color:#564d4d'><b>TV Show </b></span>\")+\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.9)+\n  scale_fill_manual(values = c(\"#E50914\",\"#564d4d\"))+\n  scale_y_continuous(sec.axis = sec_axis(~.,name= \"total\"))+ #Encontrar esto = 1h+\n  theme_void()+\n  theme(\n    axis.text.x = element_text(angle = 90, vjust = 1, hjust=0.5), #años vertical\n    plot.title = element_markdown(margin = margin(b = 10),face = \"bold\", hjust = 0.5), #usar html en el título\n    axis.text.y = element_text(hjust = 0),\n    legend.position = \"none\",\n    plot.margin = margin(0, 0.3, 0.2, -0.63, unit = \"cm\"),\n    )\n\n```\n\nEl gráfico muestra la evolución de la creación de contenido en los últimos 22 años, desde 2000 hasta 2022. Se divide en dos categorías: **Películas** *(rojo)* y **series de televisión** *(marrón)*.\n\n**Películas**\n\nEn el caso de las películas, se observa una **tendencia creciente** a lo largo de los años, con un aumento de más del 200% desde 2000. El crecimiento es más pronunciado en los últimos años, con un aumento de más de 50% en la última década.\n\nEste crecimiento se puede atribuir a varios factores, entre los que destacan:\n\n  -El **aumento de la popularidad de las plataformas de streaming**, como Netflix, HBO Max y Disney+, que han creado una mayor demanda de contenido original.<br>\n  -El desarrollo de nuevas tecnologías de producción, como la animación por ordenador, que han **reducido los costes** y han facilitado la creación de contenido de mayor calidad.<br>\n  -La **globalización de la industria cinematográfica**, que ha permitido a los creadores de contenido llegar a una audiencia más amplia.<br>\n  \n**Series de televisión**\n\nEn el caso de las series de televisión, también se observa una **tendencia creciente** a lo largo de los años, con un aumento de más del 300% desde 2000. El crecimiento es más pronunciado en la última década, con un aumento de más del 150%.\n\nEste crecimiento se debe a factores similares a los que han impulsado el crecimiento de las películas, como el aumento de la popularidad de las plataformas de streaming y el desarrollo de nuevas tecnologías de producción. Además, las series de televisión han experimentado una serie de cambios en los últimos años que las han hecho más atractivas para los espectadores, como:\n\n  -La **diversificación de los géneros y formatos**, con el auge de las series de comedia, drama, terror, fantasía, ciencia ficción, etc.<br>\n  -La **mayor duración de las temporadas**, que ha permitido a los creadores de contenido desarrollar historias más complejas.<br>\n  -La incorporación de nuevos actores y actrices, que han atraído a nuevos espectadores.<br>\n  \n**Conclusiones**\n\nEn general, el gráfico muestra que la creación de contenido, tanto de películas como de series de televisión, ha experimentado un crecimiento significativo en los últimos años. Este crecimiento se debe a una serie de factores, entre los que destacan el aumento de la popularidad de las plataformas de streaming, el desarrollo de nuevas tecnologías de producción y la globalización de la industria.\n\nSe espera que esta tendencia continúe en los próximos años, ya que las plataformas de streaming siguen creciendo y las nuevas tecnologías de producción siguen desarrollándose.\n\n---\n\n# Comparación Series Vs Películas\n\n## Oferta de streaming Netflix\n\n```{r}\n#Gráfico Porcentaje Películas Vs Series----\n\ntipos_netflix <- df_netflix |> \n  count(type) |> \n  mutate(porcentaje = n / sum(n) *100) \n\n#Voy a cambiar el nombre de dentro de las variable type\n\ntipos_netflix$type <- gsub(\"MOVIE\", \"Movie\", tipos_netflix$type, ignore.case = TRUE)\ntipos_netflix$type <- gsub(\"SHOW\", \"TV Show\", tipos_netflix$type, ignore.case = TRUE)\n\n#printf(\"%.1f%%\", ...) Para coger solo 1 decimal\ntipos_netflix$porcentaje <-sprintf(\"%.f%%\", tipos_netflix$porcentaje)\n\n#Creamos una variable que contenga tanto el tipo como el porcentaje para hacerlo luego bonito\ntipos_netflix$etiqueta <- paste(tipos_netflix$porcentaje, tipos_netflix$type, sep = \"\\n\")\n\n# Suponiendo que conteo_tipos es tu dataframe con el conteo y porcentaje\nggplot(tipos_netflix, aes(x = \"\", y = porcentaje, fill = type)) +\n  geom_bar(stat = \"identity\", width = 0.4) +\n  geom_text(aes(label = etiqueta), position = position_stack(0.5), size = 10, color = \"white\", fontface = \"bold\") +\n  scale_fill_manual(values = c(\"#B81D24\", \"#564d4d\")) +  # Colores personalizados\n  coord_flip()+\n  theme_void()+\n  theme(legend.position = \"none\")\n  \n#He estado 3h mínimo para hacer esta gráfica (para poner el texto + % dentro... locura)\n\n\n```\n\nEl gráfico muestra la composición del contenido de Netflix en términos de películas y series de televisión. La barra roja representa el porcentaje de películas, mientras que la barra marrón representa el porcentaje de series de televisión.<br>\nComo podemos observar, Netflix ofrece una amplia variedad de contenido, con un **enfoque especial en las películas**, donde estas representan el **62%** del contenido de Netflix, mientras que las **series de televisión** representan el **38%**.\n\nEste resultado se debe a varios factores. En primer lugar, las películas son un tipo de contenido popular que atrae a una amplia audiencia, además de que Netflix ha invertido mucho en la producción de películas originales, que han tenido un gran éxito en la actualidad. \n\n---\n\n## Oferta Streaming por paises\n\n```{r}\n#GRAFICOS DE BARRAS SERIES VS PELIS RESPECTO AL PAIS----\n\n#En primer lugar vamos a desglosarlo por paises, ya que hay pelis que estan producidas en varios países\n\n#Para descubrir como se hacía esto he tenido que venderle mi alma al diablo\n\ndf_netflix_long <- df_netflix |> \n  select(c(title, type, production_countries)) |> \n  separate_rows(production_countries, sep = \", \") |> \n  filter(!is.na(production_countries))\n\ndf_netflix_long$production_countries <- str_replace_all(df_netflix_long$production_countries,\"[\\\\[\\\\]']\", \"\")\n\n#Vamos a contar MOVIE Y SHOW producido en cada país\n\ndf_netflix_long <- df_netflix_long |> \n  group_by(production_countries, type) |> \n  summarise(count = n())\n\ndf_netflix_long <- df_netflix_long |> \n  group_by(production_countries) |> \n  mutate(total = sum(count)) |> \n  ungroup()\n\n#Eliminamos las filas que no contengan nada (NA)\ndf_netflix_long <- df_netflix_long |> \n  filter(!is.na(production_countries) & production_countries != \"\")\n\n#Ordenamos dataframe y seleccionamos los 10 primeros (20 porque son 2 por país)\ndf_netflix_long <- df_netflix_long |> \n  arrange(desc(total))\n\ntop_country_netflix <- head(df_netflix_long, 20)\n\n#Creamos 2 nuevas variables con el % respecto al total  (MOVIE y SHOW)\ntop_country_netflix <- top_country_netflix |> \n  group_by(production_countries) |> \n  summarise(percentage_movie = (count[type == \"MOVIE\"] / total) * 100,\n         percentage_show = (count[type == \"SHOW\"] / total) * 100) |> \n  ungroup()\n\n#Tenemos los datos duplicados, hay que coger solo 1 de cada país\ntop_country_netflix <- top_country_netflix |> \n  distinct(production_countries, .keep_all = TRUE)\n\n#Vamos a cambiar los nombres de los países para que se vea mejor luego al graficarlo\ntop_country_netflix <- top_country_netflix |> \n  mutate(production_countries = case_when(\n    production_countries == \"KR\" ~ \"Korea\",\n    production_countries == \"JP\" ~ \"Japón\",\n    production_countries == \"GB\" ~ \"UK\",\n    production_countries == \"US\" ~ \"USA\",\n    production_countries == \"MX\" ~ \"México\",\n    production_countries == \"ES\" ~ \"España\",\n    production_countries == \"FR\" ~ \"Francia\",\n    production_countries == \"CA\" ~ \"Canada\",\n    production_countries == \"DE\" ~ \"Turquía\",\n    production_countries == \"IN\" ~ \"Índia\",\n  ))\n\n#Y ordenamos de más a menos respecto SHOW\ntop_country_netflix <- top_country_netflix |> \n  arrange(desc(percentage_show))\n\n#Pasamos a long para que lo pueda interpretar mejor\ntop_country_netflix_long <- top_country_netflix |> \n  pivot_longer(cols = c(percentage_movie, percentage_show),\n               names_to = \"type\",\n               values_to = \"percentage\")\n\n#Tenemos que pasar a factor la variable production_countries para que no se buguee\ntop_country_netflix_long$production_countries <- factor(top_country_netflix_long$production_countries, levels = unique(top_country_netflix_long$production_countries))\n#Grafíco\n\n#Redondeamos a 1 decimal y ponemos el símbolo %\ntop_country_netflix_long$percentage <- round(top_country_netflix_long$percentage, 1)\n\n#si hago esto se rompe, no se porque\n#top_country_netflix_long$percentage <- paste0(top_country_netflix_long$percentage, \"%\")\n\nggplot(top_country_netflix_long, aes(x = production_countries, y = percentage, fill = type)) +\n  geom_bar(stat = \"identity\",position = \"stack\", width = 0.5)+\n  coord_flip()+\n  scale_fill_manual(values = c(\"percentage_movie\" = \"#E50914\", \"percentage_show\" = \"#564d4d\"))+\n  geom_text(aes(label = percentage), position = position_stack(0.5), size = 3, color = \"white\")+\n  labs(title = \"Top paises creadores de cine por <span style='color:#E50914'><b>Movie</b></span> &<span style='color:#564d4d'><b>TV Show </b></span> <br><span style='font-size:10pt;'><i>(Representado en %)</i></span>\")+\n  theme_minimal()+\n  theme(\n    legend.position = \"none\",\n    plot.title = element_markdown(margin = margin(b = 10),face = \"bold\", hjust = 0.5),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(), \n    panel.grid.major.y = element_blank(),\n  )+\n  scale_y_reverse()\n# DIOS ESTE GRÁFICO, PA VOLVERSE LOCO, creo que a medida que hago más gráficos son más costosos\n#Fino señores\n\n```\n\nLa gráfica muestra los **diez países que producen más películas y series de televisión en el mundo**, segmentado por categoría. Los países se ordenan de mayor a menor producción, según el porcentaje de películas.\n\nComo se puede ver, **India** es el país que tiene una **mayor proporción** de creación de **películas** del ranking con un 91.5%. A continuación tenemos a Turquía, con un 74.3% (con sus importantes películas turcas que todos conocemos), y Canada y Francia que producen aproximádamente un 70% películas.<br>\nEn el otro extremo, podemos encontrar a los **países asiáticos**, Korea y Japón, caracterizados por hacer **series de animación** o acción y aventura, como \"El juego del calamar\". Estas se han especializado en la creación de series de televisión/anime, siendo su producción un 78.4% y 62.7% sobre el total de su producción.\nPor otro lado, podemos observar ciertos países que se decantan más por la creación de películas pero que, aún así, está muy parejo, rondando todos el 60% en películas y el restante 40% en series. Estos son, España, México, Estados Unidos y Reino Unido.\n\nEl gráfico muestra una tendencia general a la creciente importancia de los países emergentes en la producción de cine y televisión. India, Turquía y Canadá son ejemplos de países que han experimentado un crecimiento significativo en la producción de cine y televisión en los últimos años. En contraposición, también muestra la importancia de los mercados internacionales para la industria cinematográfica y televisiva. Los países que aparecen en este ranking son aquellos que producen películas y programas de televisión que tienen éxito en todo el mundo.\n\n---\n\n# Ranking de géneros por nota\n\n```{r}\n#Ranking/Valoración de los géneros en netflix-----\n\n#Seleccionamos los datos que vamos a utilizar y filtrarlos para quitarnos las notas sesgadas (pocos votos)\n\ndf_generos_net <- df_netflix |> \n  select(title, type, genres, score, votes) |> \n  filter(votes> 4000) |> \n  select(-votes)\n\n#Vamos a desglosarlo, ya que una película puede tener varios géneros\n\ngeneros_net <- df_generos_net |> \n  separate_rows(genres, sep = \", \") |> \n  filter(!is.na(genres)) \n\ngeneros_net$genres <- str_replace_all(generos_net$genres,\"[\\\\[\\\\]']\", \"\")\n\n#En un principio vamos a hacer el analisis sobre Movies\ngeneros_net <- generos_net |> \n  filter(type == \"MOVIE\") |> \n  select(-type)\n\n#Eliminamos las categorías menos conocidas\ngeneros_net <- generos_net |> \n  filter(!(genres %in% c(\"war\", \"sport\", \"european\",\"family\", \"fantasy\")))\n\n#Vamos a hacer un filtro seleccionando las 80 mejores peliculas de cada categoría y hacer la media\n#(Se va a crear un poco de sesgo pero al fin y al cabo es para que se vea mejor)\ngeneros_net_ordenado <- generos_net |> \n  arrange(genres, desc(score))\n\ntop_100_por_genero <- generos_net_ordenado |> \n  group_by(genres) |> \n  slice_head(n = 80)\n\nnota_generos_net <- top_100_por_genero |> \n  group_by(genres) |> \n  summarise(nota_media = mean(score, na.rm = TRUE))\n\nnota_generos_net$nota_media <- round(nota_generos_net$nota_media, 2)\n\nnota_generos_net <- nota_generos_net |> \n  mutate(genres = case_when(\n    genres == \"documentation\" ~ \"documental\",\n    TRUE ~ genres\n  ))\n\nnota_generos_net$genres <- tools::toTitleCase(nota_generos_net$genres)\n\n\n\n\n#GRAFICA \nggplot(nota_generos_net) +\n  geom_col(\n    aes(\n      x = reorder(str_wrap(genres, 5), nota_media),\n      y = (nota_media - 5) / 5,  # Escalar la altura de las barras al rango [0, 1]\n      fill = nota_media\n    ),\n    position = \"dodge2\",\n    show.legend = TRUE,\n    alpha = .9\n  ) +\n  coord_polar() +\n  scale_y_continuous(\n    limits = c(-0.7, 1),  # Ajustar los límites a [0, 1]\n    expand = c(0, -0.4)  \n  ) +\n  scale_fill_gradientn(\n    \"Nota media del género\",\n    colours = c(\"#252527\",\"#6d625c\",\"#410a14\" ,\"#ed0b0e\")\n  ) +\n  guides(fill = guide_colorsteps(\n    barwidth = 15, barheight = .5, title.position = \"top\", title.hjust = 0.5\n  )) +\n  labs(\n    title = \"Valoración de las categorías en Netflix\"\n  )+\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid = element_blank(),\n    plot.title = element_text(face = \"bold\", size = 15, hjust = 0.5),\n    panel.background = element_rect(fill = \"white\", color = \"white\"),\n    panel.grid.major.x = element_blank(),\n    axis.text.x = element_text(color = \"#252527\", size = 11, hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_text(color = \"#252527\")\n  )\n\n```\n\nEsta gráfica muestra la valoración media de las categorías de contenido en Netflix, según las puntuaciones de los usuarios. Las categorías se ordenan de menor a mayor según el sentido de las agujas del reloj, yendo con un color más oscuro y negro, lás menos valoradas, a un rojo más vivo, siendo estas las mejor valoradas por la audiencia.\nEn primer lugar, podemos observar como las categorías más mainstream son **más valoradas**, siendo estas **Drama** y **Comedia**, con una nota de *8.2* y *8* respectivamente. <br>\nA continuación tenemos un grupo de categorías, también muy bien valoradas con una nota muy similar, que oscilan entre *7.25* hasta *7.75*. Estas son Documental, Action, Thriller, Romance y Crime, de más valorado a menos.<br>\nPor último, se hallan las categorías **peor valoradas** de netflix, con una nota que va desde *6.4*, la menos valorada, hasta *6.8*. Entre estas podemos destacar a **Wester** y **Horrror** que son las peores.<br>\n\nEn general, las categorías de contenido más valoradas en Netflix son aquellas que ofrecen historias complejas e interesantes, que pueden generar una mayor conexión con los espectadores y aceptadas por un público más amplio (son más para todos los públicos).En cambio, las categorías peor valoradas son aquellas que pueden ser polarizadoras o que pueden no ofrecer una experiencia tan gratificante para los espectadores.\n\n---\n\n# Series i películas más valoradas\n\n:::{.panel-tabset}\n\n## Top Series\n\n```{r}\ntable_show_net <- df_netflix |> \n  filter(type == \"SHOW\") |> \n  filter(votes > 70000) |> \n  select(c(year, title, genres, production_countries, score)) |> \n  arrange(desc(score)) |> \n  slice_head(n=10)\n\ntable_show_net <- table_show_net |> \n  dplyr::rename(\n    Año = year,\n    Título = title,\n    Géneros = genres,\n    Producción = production_countries,\n    Nota = score\n  )\n\ntable_show_net |> \n  gt() |> \n  tab_header(title = md(\"**Top 10** mejores **series** de Netflix\"),\n             subtitle = md(\"*Dentro de las más valoradas*\")) |> \n  tab_footnote(footnote = md(\"*Producción propia a partir de datos de `kaggle`*\"))\n\n```\n\nAquí podemos observar el top 10 de las mejores series de Netflix valoradas por el público, de forma descendiente.\nPráctiamente todas tienen una nota de excelente, pero hay varias cosas que se pueden observar. <br>\nEn primer lugar, dentro del top, podemos ver como hay una clara predominación de series producidas en **Estados Undidos**, que puede deberse, o porque producen una mayor cantidad de series o que gracias a esto han aprendido y se han hecho **mejores cinematográficamente**. La más destacada \"Breaking Bad\"<br>\nEn segundo lugar, podemos observar como **Japón**, con sus **animes** se apodera de prácticamente la otra mitad del podio, entre ellos \"Death Note\", \"Attack on Titan\" o \"One Piece\".\n\n## Top Películas\n\n```{r}\ntable_movie_net <- df_netflix |> \n  filter(type == \"MOVIE\") |> \n  filter(votes > 42000) |> \n  select(c(year, title, genres, production_countries, score)) |> \n  arrange(desc(score)) |> \n  slice_head(n=10)\n\ntable_movie_net <- table_movie_net |> \n  dplyr::rename(\n    Año = year,\n    Título = title,\n    Géneros = genres,\n    Producción = production_countries,\n    Nota = score)\n\ntable_movie_net |> \n  gt() |> \n  tab_header(title = md(\"**Top 10** mejores **películas** de Netflix\"),\n             subtitle = md(\"*Dentro de las más valoradas*\")) |> \n  tab_footnote(footnote = md(\"*Producción propia a partir de datos de `kaggle`*\"))\n\n```\n\nAquí, podemos observar la misma tendencia, como Estados Unidos es la mayor productora de las mejores películas. <br>\nEn cambio, podemos ver una curiosa casualidad y es que las 3 películas de El señor de los anillos estan dentro del podio, con notas que van del 9 al 8.8.\n\n## Buscador de contenido\n\n```{r}\n#Tabla para buscar información\n\ndf_buscar_net <- df_netflix_director |> \n  select(-c(id, votes, popularity))\n  \ndatatable(df_buscar_net)\n\n```\n\n:::\n\n---\n\n# Directores con más películas\n\n```{r}\n#Gráfico de Nombres de TOP DIRECTORES en NETFLIX----\ndf_netflix_dir <- df_netflix_director |> \n  count(Director, name = \"cantidad\", sort = TRUE)\n\ndf_netflix_dir <- df_netflix_dir |> \n  filter(Director != \"UNKNOWN\") |> \n  mutate(Director = as.factor(Director))\n\nwordcloud2(df_netflix_dir, size=0.6, \n           color=rep_len( c(\"#B81D24\",\"#564d4d\"), nrow(df_netflix_dir)),backgroundColor =\"#000000\")\n\n```\n\n<br>\n\nEste gráfico representa a los directores con mas predominancia en los cines de Netflix de una forma más creativa, visual y bonita. Siempre respetando la paleta de colores de netflix. <br>\nBrevemente, se puede observar como el mayor tamaño de los nombres indica un mayor número de obras realizadas. En este caso, el mayor productor es Raúl Campos, seguido de Jan Suter y Ryan Polito.\n\n---\n\n# Información extra\n\nEn este trabajo me he inspirado en una web donde hay una galería de todos los posibles gráficos que pueden crearse con `ggplot2`, llamado `R-graph-gallery`, podéis acceder [aquí](https://r-graph-gallery.com/){target=\"_blank\"}.<br>\nPor otro lado, este trabajo no hubiera podido ser posible si no fuese por `kaggle`, de donde he adquirido los dataframes y, además, me he inspirado de otros trabajos / gráficos. Podéis acceder [aquí](https://www.kaggle.com/){target=\"_blank\"}.<br>\nSe ha intentado seguir una mejor coherencia durante todo el trabajo y se ha respetado a la perfección la paleta de colores que representa netflix.<br>\nPara finalizar, he de explicar que he modificado / alterado los dataframes a la hora de filtrarlos etc. Es decir, estan sesgados para que la representación sea más notoria y bonita. Por tanto, puede que en algún caso no coincida algún dato con análisis externos a este trabajo. <br> *Por ejemplo, el ranking de géneros por nota, si selecciono todas las categorías sin a penas filtración todos tienen la misma nota.*\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"wrap","code-link":true,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"a11y","css":["my_styles.css"],"toc":true,"toc-depth":3,"output-file":"my_trabajo_BigData.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.3.450","knitr":{"opts_chunk":{"collapse":true,"comment":"#>","fig.asp":"7/9","out.width":"95%","fig.align":"center","fig.show":"hold","R.options":"options(scipen = 999)"}},"theme":{"light":"flatly","dark":"darkly"},"mainfont":"Lato","page-layout":"full","toc-location":"right","toc-title":"Índice","code-copy":true,"title":"Análisis de la plataforma de streaming NETFLIX","description":"Comparativa y análisis de películas, series, géneros, autores...\n","author":[{"name":"Joel Seguí Far","affiliation":"Universitat de València","affiliation-url":"https://www.uv.es"}],"date":"2024-01-24","categories":["Trabajo BigData","Netflix"],"image":"./imagenes/imagen_01.png","title-block-banner":true,"title-block-banner-color":"white","smooth-scroll":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}